/* Nel file CSS o nel CSS inline del componente */


:root {
  /* Colors */
  --brand-color: hsl(46, 100%, 50%);
  --black: hsl(0, 0%, 0%);
  --white: hsl(0, 0%, 100%);
}

/* RESET */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h2,
p {
  margin: 0;
}

/* GLOBAL STYLES */
body {
  display: grid;
  place-items: center;
  height: 100vh;
}

h2 {
  font-size: 2.25rem;
  color: var(--white);
  line-height: 1.1;
}

p {
  font-size: 1rem;
  line-height: 1.5;
  color: var(--white);
}

.flow > * + * {
  margin-top: var(--flow-space, 1em);
}

/* CARD COMPONENT */

.card {
  display: grid;
  place-items: center;
  width: 80vw;
  width: 15rem;
  height: 28.125rem;
  overflow: hidden;
  border-radius: 0.625rem;
  box-shadow: 0.25rem 0.25rem 0.5rem rgba(173, 173, 173, 0.25);
}

.card > * {
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}

.card-background {
  object-fit: cover;
  max-width: 100%;
  height: 100%;
}

.card-content {
  --flow-space: 0.9375rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-self: flex-end;
  height: 55%;
  padding: 12% 1.25rem 1.875rem;
  background: linear-gradient(
    180deg,
    hsla(0, 0%, 100%, 0) 0%,
    hsla(0, 0%, 100%, 0.3) 10%,
    hsl(0, 0%, 100%) 100%
  );
}

.card-content--container {
  --flow-space: 1.25rem;
}

.card-title {
  position: relative;
  width: fit-content;
  width: -moz-fit-content;
}

.card-title::after {
  content: "";
  position: absolute;
  height: 0.3125rem;
  width: calc(100% + 1.25rem);
  bottom: calc((1.25rem - 0.5rem) * -1);
  left: -1.25rem;
  background-color: var(--brand-color);
}

.card-description{
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 200px;
}

.card-button {
  padding: 0.75em 1.6em;
  width: fit-content;
  width: -moz-fit-content;
  font-variant: small-caps;
  font-weight: bold;
  border-radius: 0.45em;
  border: none;
  background-color: var(--brand-color);
  font-size: 1.125rem;
  color: var(--black);
}

.card-button:focus {
  outline: 2px solid black;
  outline-offset: -5px;
}

.button-image-prefe {
  width: 24px;
  height: 24px;
 background-size: contain;
  background-color: rgba(255, 255, 255, 0);
  border: none;
  cursor: pointer;
}

.button-image-prefe:focus {
  outline-offset: -5px;
}

@media (any-hover: hover) and (any-pointer: fine) {
  .card-content {
    transform: translateY(62%);
    transition: transform 500ms ease-out;
    transition-delay: 500ms;
  }

  .card-title::after {
    opacity: 0;
    transform: scaleX(0);
    transition: opacity 1000ms ease-in, transform 500ms ease-out;
    transition-delay: 500ms;
    transform-origin: right;
  }

  .card-background {
    transition: transform 500ms ease-in;
  }

  .card-content--container > :not(.card-title),
  .card-button {
    opacity: 0;
    transition: transform 500ms ease-out, opacity 500ms ease-out;
  }

  .button-image-prefe{
    opacity: 0;
    transition: transform 500ms ease-out, opacity 500ms ease-out;
  }

  .card:hover,
  .card:focus-within {
    transform: scale(1.05);
    transition: transform 500ms ease-in;
  }

  .card:hover .card-content,
  .card:focus-within .card-content {
    transform: translateY(0);
    transition: transform 500ms ease-in;
  }

  .card:focus-within .card-content {
    transition-duration: 0ms;
  }

  .card:hover .card-background,
  .card:focus-within .card-background {
    transform: scale(1.3);
  }

  .card:hover .card-content--container > :not(.card-title),
  .card:hover .card-button,
  .card:hover .button-image-prefe,
  .card:focus-within .card-content--container > :not(.card-title),
  .card:focus-within .card-button {
    opacity: 1;
    transition: opacity 500ms ease-in;
    transition-delay: 1000ms;
  }
  .card:focus-within .button-image-prefe {
    opacity: 1;
    transition: opacity 500ms ease-in;
    transition-delay: 1000ms;
  }
  .card:hover .card-title::after,
  .card:focus-within .card-title::after {
    opacity: 1;
    transform: scaleX(1);
    transform-origin: left;
    transition: opacity 500ms ease-in, transform 500ms ease-in;
    transition-delay: 500ms;
  }
}

